Microchip MPLAB XC8 Compiler V1.41 ()

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v1.41/dat/en_msgs.txt -cs \
  -h+dist/default/production/USART.X.production.sym \
  --cmf=dist/default/production/USART.X.production.cmf -z -Q18F4550 \
  -o/tmp/xcXfnwbOf -Mdist/default/production/USART.X.production.map -E1 \
  -ver=XC8 -ASTACK=060h-07ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcXzjwM6x.obj dist/default/production/USART.X.production.obj 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXzjwM6x.obj
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/USART.X.production.obj
                intcode                               8        8        6        4       0
                temp                                 2B       2B        1        1       1
                smallconst                          800      800       4E      400       0
                intcode_body                        CEE      CEE       84      427       0
                text16                              E66      E66       38      427       0
                text15                              EF8      EF8       1E      427       0
                text14                              F82      F82        8      427       0
                text13                              F32      F32       18      427       0
                text12                              C4C      C4C       A2      427       0
                text11                              F16      F16       1C      427       0
                text10                              E9E      E9E       30      427       0
                text9                               E1C      E1C       4A      427       0
                text8                               84E      84E      16E      427       0
                text7                               B8A      B8A       C2      427       0
                text6                               DD0      DD0       4C      427       0
                text5                               AB2      AB2       D8      427       0
                text4                               F60      F60       12      427       0
                text3                               F72      F72       10      427       0
                text2                               ECE      ECE       2A      427       0
                text1                               9BC      9BC       F6      427       0
                text0                               D72      D72       5E      427       0
                cstackCOMRAM                          1        1       28        1       1
                bssCOMRAM                            29       29        2        1       1
                cinit                               F4A      F4A       16      427       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                intcode_body                        CEE      CEE       84         0
                text16                              E66      E66       38         0
                text15                              EF8      EF8       1E         0
                text14                              F82      F82        8         0
                text13                              F32      F32       18         0
                text12                              C4C      C4C       A2         0
                text11                              F16      F16       1C         0
                text10                              E9E      E9E       30         0
                text9                               E1C      E1C       4A         0
                text8                               84E      84E      16E         0
                text7                               B8A      B8A       C2         0
                text6                               DD0      DD0       4C         0
                text5                               AB2      AB2       D8         0
                text4                               F60      F60       12         0
                text3                               F72      F72       10         0
                text2                               ECE      ECE       2A         0
                text1                               9BC      9BC       F6         0
                text0                               D72      D72       5E         0
                cinit                               F4A      F4A       16         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          800      800       4E         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 2B       2B        1         1
                cstackCOMRAM                          1        1       28         1
                bssCOMRAM                            29       29        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00002B  00002C         1       1  COMRAM  
                intcode                        000008  00000A  000012         4       0  CODE    
                smallconst                     000800  00004E  00084E       400       0  SMALLCON
                text8                          00084E  00073C  000F8A       427       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00002C-0007FF              7D4
        CODE             000004-000007                4
                         000012-0007FF              7EE
                         000F8A-007FFF             7076
        COMRAM           00002C-00005F               34
        CONST            000004-000007                4
                         000012-0007FF              7EE
                         000F8A-007FFF             7076
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000F8A-007FFF             7076
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000F8A-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?_cmpSignal              cstackCOMRAM 00000F
?_read_ADC               cstackCOMRAM 00000F
_ADCON0                  (abs)        000FC2
_ADCON0bits              (abs)        000FC2
_ADCON1                  (abs)        000FC1
_ADCON2                  (abs)        000FC0
_ADRES                   (abs)        000FC3
_BRGH                    (abs)        007D62
_CREN                    (abs)        007D5C
_INTCON2bits             (abs)        000FF1
_INTCON3bits             (abs)        000FF0
_INTCONbits              (abs)        000FF2
_ISR                     intcode      000008
_PORTBbits               (abs)        000F81
_PORTCbits               (abs)        000F82
_PORTD                   (abs)        000F83
_PORTEbits               (abs)        000F84
_RCIF                    (abs)        007CF5
_RCREG                   (abs)        000FAE
_SPBRG                   (abs)        000FAF
_SPEN                    (abs)        007D5F
_SYNC                    (abs)        007D64
_T0CONbits               (abs)        000FD5
_TMR0H                   (abs)        000FD7
_TMR0L                   (abs)        000FD6
_TRISAbits               (abs)        000F92
_TRISB                   (abs)        000F93
_TRISBbits               (abs)        000F93
_TRISC6                  (abs)        007CA6
_TRISC7                  (abs)        007CA7
_TRISCbits               (abs)        000F94
_TRISD                   (abs)        000F95
_TRISE                   (abs)        000F96
_TRMT                    (abs)        007D61
_TXEN                    (abs)        007D65
_TXREG                   (abs)        000FAD
__CFG_BOR$ON             (abs)        000000
__CFG_BORV$3             (abs)        000000
__CFG_CCP2MX$ON          (abs)        000000
__CFG_CP0$OFF            (abs)        000000
__CFG_CP1$OFF            (abs)        000000
__CFG_CP2$OFF            (abs)        000000
__CFG_CP3$OFF            (abs)        000000
__CFG_CPB$OFF            (abs)        000000
__CFG_CPD$OFF            (abs)        000000
__CFG_CPUDIV$OSC1_PLL2   (abs)        000000
__CFG_EBTR0$OFF          (abs)        000000
__CFG_EBTR1$OFF          (abs)        000000
__CFG_EBTR2$OFF          (abs)        000000
__CFG_EBTR3$OFF          (abs)        000000
__CFG_EBTRB$OFF          (abs)        000000
__CFG_FCMEN$OFF          (abs)        000000
__CFG_FOSC$HS            (abs)        000000
__CFG_ICPRT$OFF          (abs)        000000
__CFG_IESO$OFF           (abs)        000000
__CFG_LPT1OSC$OFF        (abs)        000000
__CFG_LVP$OFF            (abs)        000000
__CFG_MCLRE$ON           (abs)        000000
__CFG_PBADEN$OFF         (abs)        000000
__CFG_PLLDIV$1           (abs)        000000
__CFG_PWRT$OFF           (abs)        000000
__CFG_STVREN$ON          (abs)        000000
__CFG_USBDIV$1           (abs)        000000
__CFG_VREGEN$OFF         (abs)        000000
__CFG_WDT$OFF            (abs)        000000
__CFG_WDTPS$32768        (abs)        000000
__CFG_WRT0$OFF           (abs)        000000
__CFG_WRT1$OFF           (abs)        000000
__CFG_WRT2$OFF           (abs)        000000
__CFG_WRT3$OFF           (abs)        000000
__CFG_WRTB$OFF           (abs)        000000
__CFG_WRTC$OFF           (abs)        000000
__CFG_WRTD$OFF           (abs)        000000
__CFG_XINST$OFF          (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbank3                 bank3        000000
__Hbank4                 bank4        000000
__Hbank5                 bank5        000000
__Hbank6                 bank6        000000
__Hbank7                 bank7        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000012
__Hintcode               intcode      00000E
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    00000E
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      00000E
__Hram                   ram          000000
__Hramtop                ramtop       000800
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000004
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   00084E
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        00002C
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         00002C
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext11                text11       000000
__Htext12                text12       000000
__Htext13                text13       000000
__Htext14                text14       000000
__Htext15                text15       000000
__Htext16                text16       000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbank3                 bank3        000000
__Lbank4                 bank4        000000
__Lbank5                 bank5        000000
__Lbank6                 bank6        000000
__Lbank7                 bank7        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         00000E
__Lintcode               intcode      000008
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    00000E
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      00000E
__Lram                   ram          000000
__Lramtop                ramtop       000800
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000800
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         00002B
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext11                text11       000000
__Ltext12                text12       000000
__Ltext13                text13       000000
__Ltext14                text14       000000
__Ltext15                text15       000000
__Ltext16                text16       000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        00002C
__S2                     (abs)        000000
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___param_bank            (abs)        000000
___rparam_used           (abs)        000001
___sp                    stack        000000
__accesstop              (abs)        000060
__activetblptr           (abs)        000001
__end_of_ISR             intcode_body 000D72
__end_of__initialization cinit        000F4E
__end_of_bip             text7        000C4C
__end_of_cadastrarSenha  text8        0009BC
__end_of_clearLCD        text14       000F8A
__end_of_cmpPass         text5        000B8A
__end_of_cmpSignal       text6        000E1C
__end_of_ena_pulse       text16       000E9E
__end_of_init_ADC        text4        000F72
__end_of_init_INTRB2     text3        000F82
__end_of_init_LCD        text2        000EF8
__end_of_lerToque        text1        000AB2
__end_of_main            text0        000DD0
__end_of_readSignal      text12       000CEE
__end_of_read_ADC        text13       000F4A
__end_of_send_cfg        text15       000F16
__end_of_send_msg        text10       000ECE
__end_of_set_line        text11       000F32
__end_of_write_LCD       text9        000E66
__initialization         cinit        000F4A
__mediumconst            mediumconst  000000
__pbssCOMRAM             bssCOMRAM    000029
__pcinit                 cinit        000F4A
__pcstackCOMRAM          cstackCOMRAM 000001
__pintcode               intcode      000008
__pintcode_body          intcode_body 000CEE
__psmallconst            smallconst   000800
__ptext0                 text0        000D72
__ptext1                 text1        0009BC
__ptext10                text10       000E9E
__ptext11                text11       000F16
__ptext12                text12       000C4C
__ptext13                text13       000F32
__ptext14                text14       000F82
__ptext15                text15       000EF8
__ptext16                text16       000E66
__ptext2                 text2        000ECE
__ptext3                 text3        000F72
__ptext4                 text4        000F60
__ptext5                 text5        000AB2
__ptext6                 text6        000DD0
__ptext7                 text7        000B8A
__ptext8                 text8        00084E
__ptext9                 text9        000E1C
__ramtop                 ramtop       000800
__size_of_ISR            (abs)        000000
__size_of_bip            (abs)        000000
__size_of_cadastrarSenha (abs)        000000
__size_of_clearLCD       (abs)        000000
__size_of_cmpPass        (abs)        000000
__size_of_cmpSignal      (abs)        000000
__size_of_ena_pulse      (abs)        000000
__size_of_init_ADC       (abs)        000000
__size_of_init_INTRB2    (abs)        000000
__size_of_init_LCD       (abs)        000000
__size_of_lerToque       (abs)        000000
__size_of_main           (abs)        000000
__size_of_readSignal     (abs)        000000
__size_of_read_ADC       (abs)        000000
__size_of_send_cfg       (abs)        000000
__size_of_send_msg       (abs)        000000
__size_of_set_line       (abs)        000000
__size_of_write_LCD      (abs)        000000
__smallconst             smallconst   000800
_bip                     text7        000B8A
_button                  bssCOMRAM    000029
_cadastrarSenha          text8        00084E
_clearLCD                text14       000F82
_cmpPass                 text5        000AB2
_cmpSignal               text6        000DD0
_ena_pulse               text16       000E66
_init_ADC                text4        000F60
_init_INTRB2             text3        000F72
_init_LCD                text2        000ECE
_lerToque                text1        0009BC
_main                    text0        000D72
_readSignal              text12       000C4C
_read_ADC                text13       000F32
_send_cfg                text15       000EF8
_send_msg                text10       000E9E
_set_line                text11       000F16
_write_LCD               text9        000E1C
bip@j                    cstackCOMRAM 000015
bip@rounds               cstackCOMRAM 00000F
bip@time                 cstackCOMRAM 000011
btemp                    temp         00002B
cadastrarSenha@i         cstackCOMRAM 000023
cadastrarSenha@pass      cstackCOMRAM 00001F
cmpPass@i                cstackCOMRAM 00001C
cmpPass@pass             cstackCOMRAM 000018
cmpPass@toque            cstackCOMRAM 00001A
cmpSignal@pass           cstackCOMRAM 00000F
cmpSignal@toc            cstackCOMRAM 000011
end_of_initialization    cinit        000F4E
int$flags                temp         00002B
int_func                 intcode_body 000CEE
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
lerToque@i               cstackCOMRAM 000021
lerToque@toque           cstackCOMRAM 00001F
main@pass                cstackCOMRAM 000027
main@toc                 cstackCOMRAM 000025
readSignal@i             cstackCOMRAM 00001B
readSignal@j             cstackCOMRAM 00001D
readSignal@limite        cstackCOMRAM 000019
readSignal@pos           cstackCOMRAM 000015
readSignal@signal        cstackCOMRAM 000013
read_ADC@value           cstackCOMRAM 000011
send_cfg@cmd             cstackCOMRAM 000011
send_msg@msg             cstackCOMRAM 000011
set_line@cursor          cstackCOMRAM 000016
set_line@line            cstackCOMRAM 000012
set_line@pos             cstackCOMRAM 000014
stackhi                  (abs)        0007FF
stacklo                  (abs)        000060
start                    init         00000E
start_initialization     cinit        000F4A
write_LCD@c              cstackCOMRAM 000012
write_LCD@i              cstackCOMRAM 000016


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 20 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  pass            2   38[COMRAM] unsigned char [2]
  toc             2   36[COMRAM] unsigned char [2]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_cadastrarSenha
		_cmpPass
		_init_ADC
		_init_INTRB2
		_init_LCD
		_lerToque
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _lerToque *****************
 Defined at:
		line 55 in file "TOCTOC.c"
 Parameters:    Size  Location     Type
  toque           2   30[COMRAM] PTR unsigned char 
		 -> main@toc(2), 
 Auto vars:     Size  Location     Type
  i               2   32[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_clearLCD
		_readSignal
		_send_msg
		_set_line
		_write_LCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_LCD *****************
 Defined at:
		line 45 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_send_cfg
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_INTRB2 *****************
 Defined at:
		line 40 in file "Interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init_ADC *****************
 Defined at:
		line 11 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _cmpPass *****************
 Defined at:
		line 81 in file "TOCTOC.c"
 Parameters:    Size  Location     Type
  pass            2   23[COMRAM] PTR unsigned char 
		 -> main@pass(2), 
  toque           2   25[COMRAM] PTR unsigned char 
		 -> main@toc(2), 
 Auto vars:     Size  Location     Type
  i               2   27[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_bip
		_clearLCD
		_cmpSignal
		_set_line
		_write_LCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _cmpSignal *****************
 Defined at:
		line 36 in file "ReadSignal.c"
 Parameters:    Size  Location     Type
  pass            2   14[COMRAM] PTR unsigned char 
		 -> main@pass(2), 
  toc             2   16[COMRAM] PTR unsigned char 
		 -> main@toc(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   14[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_cmpPass
 This function uses a non-reentrant model


 *************** function _bip *****************
 Defined at:
		line 14 in file "Buzzer.c"
 Parameters:    Size  Location     Type
  rounds          2   14[COMRAM] int 
  time            2   16[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   20[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_cmpPass
 This function uses a non-reentrant model


 *************** function _cadastrarSenha *****************
 Defined at:
		line 19 in file "TOCTOC.c"
 Parameters:    Size  Location     Type
  pass            2   30[COMRAM] PTR unsigned char 
		 -> main@pass(2), 
 Auto vars:     Size  Location     Type
  i               2   34[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_clearLCD
		_readSignal
		_send_msg
		_set_line
		_write_LCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _write_LCD *****************
 Defined at:
		line 59 in file "LCD.c"
 Parameters:    Size  Location     Type
  c               2   17[COMRAM] PTR unsigned char 
		 -> STR_9(14), STR_8(10), STR_7(10), STR_6(10), 
		 -> STR_5(14), STR_4(11), STR_3(8), STR_2(6), 
		 -> STR_1(13), 
 Auto vars:     Size  Location     Type
  i               2   21[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_send_msg
 This function is called by:
		_cadastrarSenha
		_lerToque
		_cmpPass
 This function uses a non-reentrant model


 *************** function _send_msg *****************
 Defined at:
		line 35 in file "LCD.c"
 Parameters:    Size  Location     Type
  msg             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  msg             1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ena_pulse
 This function is called by:
		_write_LCD
		_cadastrarSenha
		_lerToque
 This function uses a non-reentrant model


 *************** function _set_line *****************
 Defined at:
		line 66 in file "LCD.c"
 Parameters:    Size  Location     Type
  line            2   17[COMRAM] int 
  pos             2   19[COMRAM] int 
 Auto vars:     Size  Location     Type
  cursor          1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_send_cfg
 This function is called by:
		_cadastrarSenha
		_lerToque
		_cmpPass
 This function uses a non-reentrant model


 *************** function _readSignal *****************
 Defined at:
		line 13 in file "ReadSignal.c"
 Parameters:    Size  Location     Type
  signal          2   18[COMRAM] PTR unsigned char 
		 -> main@toc(2), main@pass(2), 
  pos             2   20[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   28[COMRAM] int 
  i               2   26[COMRAM] int 
  limite          2   24[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_read_ADC
 This function is called by:
		_cadastrarSenha
		_lerToque
 This function uses a non-reentrant model


 *************** function _read_ADC *****************
 Defined at:
		line 19 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  value           2   16[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   14[COMRAM] unsigned int 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_readSignal
 This function uses a non-reentrant model


 *************** function _clearLCD *****************
 Defined at:
		line 31 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_send_cfg
 This function is called by:
		_cadastrarSenha
		_lerToque
		_cmpPass
 This function uses a non-reentrant model


 *************** function _send_cfg *****************
 Defined at:
		line 22 in file "LCD.c"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ena_pulse
 This function is called by:
		_clearLCD
		_init_LCD
		_set_line
 This function uses a non-reentrant model


 *************** function _ena_pulse *****************
 Defined at:
		line 11 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_send_cfg
		_send_msg
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 32 in file "Interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:         14       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
TOCTOC.c
		_cadastrarSenha		CODE           	084E	0000	367
		_cmpPass       		CODE           	0AB2	0000	217
		_lerToque      		CODE           	09BC	0000	247

TOCTOC.c estimated size: 831

Buzzer.c
		_bip           		CODE           	0B8A	0000	195

Buzzer.c estimated size: 195

shared
		__initialization		CODE           	0F4A	0000	5

shared estimated size: 5

Interrupt.c
		_ISR           		CODE           	0008	0000	139
		_init_INTRB2   		CODE           	0F72	0000	17

Interrupt.c estimated size: 156

ReadSignal.c
		_readSignal    		CODE           	0C4C	0000	163
		_cmpSignal     		CODE           	0DD0	0000	77

ReadSignal.c estimated size: 240

ADC.c
		_init_ADC      		CODE           	0F60	0000	19
		_read_ADC      		CODE           	0F32	0000	25

ADC.c estimated size: 44

main.c
		_main          		CODE           	0D72	0000	95

main.c estimated size: 95

LCD.c
		_set_line      		CODE           	0F16	0000	29
		_send_cfg      		CODE           	0EF8	0000	31
		_write_LCD     		CODE           	0E1C	0000	75
		_init_LCD      		CODE           	0ECE	0000	43
		_ena_pulse     		CODE           	0E66	0000	57
		_send_msg      		CODE           	0E9E	0000	49
		_clearLCD      		CODE           	0F82	0000	9

LCD.c estimated size: 293

